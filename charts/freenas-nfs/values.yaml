democratic-csi:
  csiDriver:
    # should be globally unique for a given cluster
    name: "org.democratic-csi.nfs"

  # add note here about volume expansion requirements
  storageClasses:
    - name: freenas-nfs-csi
      defaultClass: false
      reclaimPolicy: Delete
      volumeBindingMode: Immediate
      allowVolumeExpansion: true
      parameters:
        # for block-based storage can be ext3, ext4, xfs
        # for nfs should be nfs
        fsType: nfs

        # if true, volumes created from other snapshots will be
        # zfs send/received instead of zfs cloned
        # detachedVolumesFromSnapshots: "false"

        # if true, volumes created from other volumes will be
        # zfs send/received instead of zfs cloned
        # detachedVolumesFromVolumes: "false"

      mountOptions:
        - noatime
        - nfsvers=4
      secrets:
        provisioner-secret:
        controller-publish-secret:
        node-stage-secret:
        node-publish-secret:
        controller-expand-secret:

  # if your cluster supports snapshots you may enable below
  volumeSnapshotClasses: []
  #- name: freenas-nfs-csi
  #  parameters:
  #  # if true, snapshots will be created with zfs send/receive
  #  # detachedSnapshots: "false"
  #  secrets:
  #    snapshotter-secret:

  driver:
    config:
      driver: freenas-nfs
      instance_id:
      httpConnection:
        protocol: https
        host: allspark.ianharris.io
        port: 443
        apiKey: <redacted>
        username: root
        allowInsecure: false
        apiVersion: 2
      sshConnection:
        host: 192.168.100.100
        port: 22
        username: k8s-op
        # use either password or key
        privateKey: |
          -----BEGIN RSA PRIVATE KEY-----
          <redacted>
          -----END RSA PRIVATE KEY-----
      zfs:
        # can be used to override defaults if necessary
        # the example below is useful for TrueNAS 12
        cli:
          sudoEnabled: true
        #
        #  leave paths unset for auto-detection
        #  paths:
        #    zfs: /usr/local/sbin/zfs
        #    zpool: /usr/local/sbin/zpool
        #    sudo: /usr/local/bin/sudo
        #    chroot: /usr/sbin/chroot

        # can be used to set arbitrary values on the dataset/zvol
        # can use handlebars templates with the parameters from the storage class/CO
        datasetProperties:
          "org.freenas:description": "{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}/{{ parameters.[csi.storage.k8s.io/pvc/name] }}"
        #  "org.freenas:test": "{{ parameters.foo }}"
        #  "org.freenas:test2": "some value"

        datasetParentName: volume1/k8s/nfs/vols
        # do NOT make datasetParentName and detachedSnapshotsDatasetParentName overlap
        # they may be siblings, but neither should be nested in the other
        detachedSnapshotsDatasetParentName: volume1/k8s/nfs/snaps
        datasetEnableQuotas: true
        datasetEnableReservation: false
        datasetPermissionsMode: "0777"
        # Numeric user and group are now required
        datasetPermissionsUser: 1002
        datasetPermissionsGroup: 1004
        #datasetPermissionsAcls:
        #- "-m everyone@:full_set:allow"
        #- "-m u:kube:full_set:allow"

      nfs:
        shareHost: 192.168.100.100
        shareAlldirs: false
        shareAllowedHosts: []
        shareAllowedNetworks: []
        # for root_squash, set shareMaprootUser and shareMaprootGroup to nobody
        # for no_root squash, set shareMaprootUser to root and shareMaprootGroup to wheel
        shareMaprootUser: root
        shareMaprootGroup: wheel
        shareMapallUser: ""
        shareMapallGroup: ""
